services:
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    restart: always
    ports:
      - "8080:8080"
    environment:
      - USER_SERVICE_URL=user-service:8081
      - WALL_SERVICE_URL=wall-service:8082
      - SERVER_PORT=8080
      - LOG_LEVEL=INFO
    depends_on:
      - user-service
      - kafka
    networks:
      - app-network

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    container_name: user-service
    restart: always
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081
      - REDIS_PORT=6379
    networks:
      - app-network
      - db-network

  redis:
    image: redis:latest
    container_name: user-service-redis
    ports:
      - "1337:6379"
    volumes:
      - redis-data:/data
    networks:
      - db-network

  wall-service:
    build:
      context: .
      dockerfile: wall-service/Dockerfile
    container_name: wall-service
    restart: always
    ports:
      - "8082:8082"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=wall
      - POSTGRES_HOST=wall-service-postgres
      - SERVER_PORT=8082
      - POSTGRES_PORT=5432
      - KAFKA_BROKER=kafka:9092
    networks:
      - app-network
      - db-network

  postgres:
    image: postgres:13
    container_name: wall-service-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: wall
    volumes:
      - postgres-data:/data
      - ./wall-service/postgres_init:/docker-entrypoint-initdb.d/
    networks:
      - db-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_KRAFT_MODE=true
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
  db-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
